/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOUBLE = 4;
  /** RegularExpression Id. */
  int Num = 5;
  /** RegularExpression Id. */
  int PLUS = 6;
  /** RegularExpression Id. */
  int MINUS = 7;
  /** RegularExpression Id. */
  int TIMES = 8;
  /** RegularExpression Id. */
  int DIV = 9;
  /** RegularExpression Id. */
  int LPAR = 10;
  /** RegularExpression Id. */
  int RPAR = 11;
  /** RegularExpression Id. */
  int SLPAR = 12;
  /** RegularExpression Id. */
  int SRPAR = 13;
  /** RegularExpression Id. */
  int EL = 14;
  /** RegularExpression Id. */
  int FALSE = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int LET = 17;
  /** RegularExpression Id. */
  int IN = 18;
  /** RegularExpression Id. */
  int NEW = 19;
  /** RegularExpression Id. */
  int ASSIGN = 20;
  /** RegularExpression Id. */
  int DEREF = 21;
  /** RegularExpression Id. */
  int IF = 22;
  /** RegularExpression Id. */
  int THEN = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int DO = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int SEQ = 28;
  /** RegularExpression Id. */
  int PRINT = 29;
  /** RegularExpression Id. */
  int FUN = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int ARROW = 32;
  /** RegularExpression Id. */
  int COLON = 33;
  /** RegularExpression Id. */
  int ARRAY = 34;
  /** RegularExpression Id. */
  int GARRAY = 35;
  /** RegularExpression Id. */
  int SARRAY = 36;
  /** RegularExpression Id. */
  int INT = 37;
  /** RegularExpression Id. */
  int DOUBLETYPE = 38;
  /** RegularExpression Id. */
  int BOOL = 39;
  /** RegularExpression Id. */
  int UNIT = 40;
  /** RegularExpression Id. */
  int REF = 41;
  /** RegularExpression Id. */
  int Id = 42;
  /** RegularExpression Id. */
  int AND = 43;
  /** RegularExpression Id. */
  int OR = 44;
  /** RegularExpression Id. */
  int NOT = 45;
  /** RegularExpression Id. */
  int LESS = 46;
  /** RegularExpression Id. */
  int GREATER = 47;
  /** RegularExpression Id. */
  int LESSEQ = 48;
  /** RegularExpression Id. */
  int GREATEREQ = 49;
  /** RegularExpression Id. */
  int EQ = 50;
  /** RegularExpression Id. */
  int EQUALS = 51;
  /** RegularExpression Id. */
  int NOTEQUALS = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "<DOUBLE>",
    "<Num>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"\\n\"",
    "\"false\"",
    "\"true\"",
    "\"let\"",
    "\"in\"",
    "\"new\"",
    "\":=\"",
    "\"!\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"end\"",
    "\";\"",
    "<PRINT>",
    "\"fun\"",
    "\",\"",
    "\"->\"",
    "\":\"",
    "\"array\"",
    "\"garray\"",
    "\"sarray\"",
    "\"int\"",
    "\"double\"",
    "\"bool\"",
    "\"unit\"",
    "\"ref\"",
    "<Id>",
    "\"&&\"",
    "\"||\"",
    "\"~\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
  };

}
